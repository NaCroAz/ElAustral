<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>